package view;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import model.Mensalidade;
import org.hibernate.Session;

/**
 *
 * @author vinicius
 */
public class FrmPrincipal extends javax.swing.JFrame {
    IFrmCliente c;
    FrmLogin l = new FrmLogin();
    //Mensalidade m;
    ArrayList<Mensalidade> mensalidade;
    IFrmPersonal p;
    IFrmPlanoTreino pt;
    IFrmStatus st;
    IFrmPagamento pa;
    IFrmPlanoMensalidade pm;
    Session s;
    
    /**
     * Creates new form FrmPrincipal
     */
    public FrmPrincipal() {        
        initComponents();
    }
    
    public FrmPrincipal(Session s) {        
        this();
        this.s = s;
        c = null;
        p = null;
        pm = null;
        pt = null;
        st = null;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dskPrincipal = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnCadastrar = new javax.swing.JMenu();
        mniPlanoMensalidade = new javax.swing.JMenuItem();
        mniCliente = new javax.swing.JMenuItem();
        mniFuncionario = new javax.swing.JMenuItem();
        mniPlanoTreino = new javax.swing.JMenuItem();
        mnRelatorio = new javax.swing.JMenu();
        mniPagamento = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        mniStatus = new javax.swing.JMenuItem();
        mniLogout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("FitWare");

        javax.swing.GroupLayout dskPrincipalLayout = new javax.swing.GroupLayout(dskPrincipal);
        dskPrincipal.setLayout(dskPrincipalLayout);
        dskPrincipalLayout.setHorizontalGroup(
            dskPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 696, Short.MAX_VALUE)
        );
        dskPrincipalLayout.setVerticalGroup(
            dskPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 387, Short.MAX_VALUE)
        );

        getContentPane().add(dskPrincipal, java.awt.BorderLayout.CENTER);

        mnCadastrar.setText("Cadastros");

        mniPlanoMensalidade.setText("Plano de Mensalidade");
        mniPlanoMensalidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniPlanoMensalidadeActionPerformed(evt);
            }
        });
        mnCadastrar.add(mniPlanoMensalidade);

        mniCliente.setText("Cliente");
        mniCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniClienteActionPerformed(evt);
            }
        });
        mnCadastrar.add(mniCliente);

        mniFuncionario.setText("Personal");
        mniFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniFuncionarioActionPerformed(evt);
            }
        });
        mnCadastrar.add(mniFuncionario);

        mniPlanoTreino.setText("Plano de Treino");
        mniPlanoTreino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniPlanoTreinoActionPerformed(evt);
            }
        });
        mnCadastrar.add(mniPlanoTreino);

        jMenuBar1.add(mnCadastrar);

        mnRelatorio.setText("Relatório");

        mniPagamento.setText("Pagamento");
        mniPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniPagamentoActionPerformed(evt);
            }
        });
        mnRelatorio.add(mniPagamento);

        jMenuBar1.add(mnRelatorio);

        jMenu1.setText("Outros");

        mniStatus.setText("Status do Cliente");
        mniStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniStatusActionPerformed(evt);
            }
        });
        jMenu1.add(mniStatus);

        mniLogout.setText("Logout");
        mniLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniLogoutActionPerformed(evt);
            }
        });
        jMenu1.add(mniLogout);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void mniClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniClienteActionPerformed
        mensalidade = (ArrayList<Mensalidade>) s.createQuery("From Mensalidade").list();    
        int aux = 0;
        for(Mensalidade me : mensalidade){
            aux = 1;
        }
        if(aux == 1){    
            if(c == null){
                c = new IFrmCliente(s);
                dskPrincipal.add(c);     
            }
            if(!c.isVisible()){
                c.setVisible(true);
            }else{
                try{
                    c.moveToFront();
                    c.requestFocus();
                }catch(Exception ex){
                    ex.printStackTrace();
                }
            }
        }else{
            JOptionPane.showMessageDialog(this, "Cadastre no mínimo um plano de mensalidade!");
        }
    }//GEN-LAST:event_mniClienteActionPerformed

    private void mniFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniFuncionarioActionPerformed
       if(p == null){
            p = new IFrmPersonal(s);
            dskPrincipal.add(p);          
        }
       
        if(!p.isVisible()){
            p.setVisible(true);
        }else{
            try{
                p.moveToFront();
                p.requestFocus();
            }catch(Exception ex){
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_mniFuncionarioActionPerformed

    private void mniPlanoTreinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniPlanoTreinoActionPerformed
        if(pt == null){
            pt = new IFrmPlanoTreino(s);              
            dskPrincipal.add(pt);
        }
        if(!pt.isVisible()){            
            pt.setVisible(true);
            
            try{
                pt.moveToFront();
                pt.requestFocus();
            }catch(Exception ex){
                ex.printStackTrace();
            }
            
        }else{
            try{
                pt.moveToFront();
                pt.requestFocus();
            }catch(Exception ex){
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_mniPlanoTreinoActionPerformed

    private void mniStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniStatusActionPerformed
        if(st == null){
            st = new IFrmStatus(s);
            dskPrincipal.add(st);
                    
        }
        if(!st.isVisible()){
            st.setVisible(true);
        }else{
            try{
                st.moveToFront();
                st.requestFocus();
            }catch(Exception ex){
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_mniStatusActionPerformed

    private void mniPlanoMensalidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniPlanoMensalidadeActionPerformed
        if(pm == null){
            pm = new IFrmPlanoMensalidade(s); 
            dskPrincipal.add(pm); 
        }
        
        if(!pm.isVisible()){
              
            pm.setVisible(true);
            
            try{
                pm.moveToFront();
                pm.setSelected(true);
            }catch(Exception ex){
                ex.printStackTrace();
            }
            
        }else{
            try{
                pm.moveToFront();
                pm.setSelected(true);
            }catch(Exception ex){
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_mniPlanoMensalidadeActionPerformed

    private void mniLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniLogoutActionPerformed
        l.setVisible(true);
        dispose();
    }//GEN-LAST:event_mniLogoutActionPerformed

    private void mniPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniPagamentoActionPerformed
        if(pa == null){
            pa = new IFrmPagamento(s); 
            dskPrincipal.add(pa); 
        }
        
        if(!pa.isVisible()){
              
            pa.setVisible(true);
            
            try{
                pa.moveToFront();
                pa.setSelected(true);
            }catch(Exception ex){
                ex.printStackTrace();
            }
            
        }else{
            try{
                pa.moveToFront();
                pa.setSelected(true);
            }catch(Exception ex){
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_mniPagamentoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Session s = null;
                new FrmPrincipal(s).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane dskPrincipal;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu mnCadastrar;
    private javax.swing.JMenu mnRelatorio;
    private javax.swing.JMenuItem mniCliente;
    private javax.swing.JMenuItem mniFuncionario;
    private javax.swing.JMenuItem mniLogout;
    private javax.swing.JMenuItem mniPagamento;
    private javax.swing.JMenuItem mniPlanoMensalidade;
    private javax.swing.JMenuItem mniPlanoTreino;
    private javax.swing.JMenuItem mniStatus;
    // End of variables declaration//GEN-END:variables
}
